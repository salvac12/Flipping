/**
 * Script de prueba local para ScraperAPI
 * Ejecutar: npx tsx test-scraperapi.ts
 */

import { config } from 'dotenv';
import { scrapeIdealistaWithScraperAPI } from './lib/scraper/idealista-scraperapi';

// Cargar variables de entorno de .env.local
config({ path: '.env.local' });

async function testScraperAPI() {
  console.log('üß™ Iniciando test de ScraperAPI...\n');
  console.log('üìù SCRAPERAPI_KEY:', process.env.SCRAPERAPI_KEY ? '‚úÖ Configurada' : '‚ùå NO configurada');
  console.log('üìù Valor:', process.env.SCRAPERAPI_KEY?.substring(0, 10) + '...\n');

  try {
    const properties = await scrapeIdealistaWithScraperAPI(1);

    console.log('\nüìä RESULTADO:');
    console.log(`  Total propiedades: ${properties.length}`);

    if (properties.length > 0) {
      console.log('\n‚úÖ Primeras propiedades encontradas:');
      properties.slice(0, 3).forEach((p, i) => {
        console.log(`\n  ${i + 1}. ${p.title}`);
        console.log(`     Precio: ${p.price}‚Ç¨`);
        console.log(`     M2: ${p.m2}m¬≤`);
        console.log(`     URL: ${p.url}`);
        console.log(`     Score: ${p.score}`);
      });
    } else {
      console.log('\n‚ùå No se encontraron propiedades');
    }
  } catch (error) {
    console.error('\n‚ùå ERROR:', error);
  }
}

testScraperAPI();
